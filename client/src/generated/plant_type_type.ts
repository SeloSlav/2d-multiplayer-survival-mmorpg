// THIS FILE IS AUTOMATICALLY GENERATED BY SPACETIMEDB. EDITS TO THIS FILE
// WILL NOT BE SAVED. MODIFY TABLES IN YOUR MODULE SOURCE CODE INSTEAD.

/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
import {
  AlgebraicType,
  AlgebraicValue,
  BinaryReader,
  BinaryWriter,
  CallReducerFlags,
  ConnectionId,
  DbConnectionBuilder,
  DbConnectionImpl,
  DbContext,
  ErrorContextInterface,
  Event,
  EventContextInterface,
  Identity,
  ProductType,
  ProductTypeElement,
  ReducerEventContextInterface,
  SubscriptionBuilderImpl,
  SubscriptionEventContextInterface,
  SumType,
  SumTypeVariant,
  TableCache,
  TimeDuration,
  Timestamp,
  deepEqual,
} from "@clockworklabs/spacetimedb-sdk";
// A namespace for generated variants and helper functions.
export namespace PlantType {
  // These are the generated variant types for each variant of the tagged union.
  // One type is generated per variant and will be used in the `value` field of
  // the tagged union.
  export type BorealNettle = { tag: "BorealNettle" };
  export type Potato = { tag: "Potato" };
  export type Pumpkin = { tag: "Pumpkin" };
  export type Reed = { tag: "Reed" };
  export type BeachLymeGrass = { tag: "BeachLymeGrass" };
  export type Carrot = { tag: "Carrot" };
  export type Beets = { tag: "Beets" };
  export type Horseradish = { tag: "Horseradish" };
  export type Chicory = { tag: "Chicory" };
  export type Yarrow = { tag: "Yarrow" };
  export type Chamomile = { tag: "Chamomile" };
  export type Mint = { tag: "Mint" };
  export type Valerian = { tag: "Valerian" };
  export type Mugwort = { tag: "Mugwort" };
  export type BearGarlic = { tag: "BearGarlic" };
  export type SiberianGinseng = { tag: "SiberianGinseng" };
  export type Dogbane = { tag: "Dogbane" };
  export type BogCotton = { tag: "BogCotton" };
  export type Flax = { tag: "Flax" };
  export type Salsify = { tag: "Salsify" };
  export type ScurvyGrass = { tag: "ScurvyGrass" };
  export type Crowberry = { tag: "Crowberry" };
  export type SeaPlantain = { tag: "SeaPlantain" };
  export type Glasswort = { tag: "Glasswort" };
  export type Chanterelle = { tag: "Chanterelle" };
  export type Porcini = { tag: "Porcini" };
  export type FlyAgaric = { tag: "FlyAgaric" };
  export type ShaggyInkCap = { tag: "ShaggyInkCap" };
  export type DeadlyWebcap = { tag: "DeadlyWebcap" };
  export type DestroyingAngel = { tag: "DestroyingAngel" };
  export type Lingonberries = { tag: "Lingonberries" };
  export type Cloudberries = { tag: "Cloudberries" };
  export type Bilberries = { tag: "Bilberries" };
  export type WildStrawberries = { tag: "WildStrawberries" };
  export type RowanBerries = { tag: "RowanBerries" };
  export type Cranberries = { tag: "Cranberries" };
  export type Mandrake = { tag: "Mandrake" };
  export type Belladonna = { tag: "Belladonna" };
  export type Henbane = { tag: "Henbane" };
  export type Datura = { tag: "Datura" };
  export type Wolfsbane = { tag: "Wolfsbane" };
  export type Sunflowers = { tag: "Sunflowers" };

  // Helper functions for constructing each variant of the tagged union.
  // ```
  // const foo = Foo.A(42);
  // assert!(foo.tag === "A");
  // assert!(foo.value === 42);
  // ```
  export const BorealNettle = { tag: "BorealNettle" };
  export const Potato = { tag: "Potato" };
  export const Pumpkin = { tag: "Pumpkin" };
  export const Reed = { tag: "Reed" };
  export const BeachLymeGrass = { tag: "BeachLymeGrass" };
  export const Carrot = { tag: "Carrot" };
  export const Beets = { tag: "Beets" };
  export const Horseradish = { tag: "Horseradish" };
  export const Chicory = { tag: "Chicory" };
  export const Yarrow = { tag: "Yarrow" };
  export const Chamomile = { tag: "Chamomile" };
  export const Mint = { tag: "Mint" };
  export const Valerian = { tag: "Valerian" };
  export const Mugwort = { tag: "Mugwort" };
  export const BearGarlic = { tag: "BearGarlic" };
  export const SiberianGinseng = { tag: "SiberianGinseng" };
  export const Dogbane = { tag: "Dogbane" };
  export const BogCotton = { tag: "BogCotton" };
  export const Flax = { tag: "Flax" };
  export const Salsify = { tag: "Salsify" };
  export const ScurvyGrass = { tag: "ScurvyGrass" };
  export const Crowberry = { tag: "Crowberry" };
  export const SeaPlantain = { tag: "SeaPlantain" };
  export const Glasswort = { tag: "Glasswort" };
  export const Chanterelle = { tag: "Chanterelle" };
  export const Porcini = { tag: "Porcini" };
  export const FlyAgaric = { tag: "FlyAgaric" };
  export const ShaggyInkCap = { tag: "ShaggyInkCap" };
  export const DeadlyWebcap = { tag: "DeadlyWebcap" };
  export const DestroyingAngel = { tag: "DestroyingAngel" };
  export const Lingonberries = { tag: "Lingonberries" };
  export const Cloudberries = { tag: "Cloudberries" };
  export const Bilberries = { tag: "Bilberries" };
  export const WildStrawberries = { tag: "WildStrawberries" };
  export const RowanBerries = { tag: "RowanBerries" };
  export const Cranberries = { tag: "Cranberries" };
  export const Mandrake = { tag: "Mandrake" };
  export const Belladonna = { tag: "Belladonna" };
  export const Henbane = { tag: "Henbane" };
  export const Datura = { tag: "Datura" };
  export const Wolfsbane = { tag: "Wolfsbane" };
  export const Sunflowers = { tag: "Sunflowers" };

  export function getTypeScriptAlgebraicType(): AlgebraicType {
    return AlgebraicType.createSumType([
      new SumTypeVariant("BorealNettle", AlgebraicType.createProductType([])),
      new SumTypeVariant("Potato", AlgebraicType.createProductType([])),
      new SumTypeVariant("Pumpkin", AlgebraicType.createProductType([])),
      new SumTypeVariant("Reed", AlgebraicType.createProductType([])),
      new SumTypeVariant("BeachLymeGrass", AlgebraicType.createProductType([])),
      new SumTypeVariant("Carrot", AlgebraicType.createProductType([])),
      new SumTypeVariant("Beets", AlgebraicType.createProductType([])),
      new SumTypeVariant("Horseradish", AlgebraicType.createProductType([])),
      new SumTypeVariant("Chicory", AlgebraicType.createProductType([])),
      new SumTypeVariant("Yarrow", AlgebraicType.createProductType([])),
      new SumTypeVariant("Chamomile", AlgebraicType.createProductType([])),
      new SumTypeVariant("Mint", AlgebraicType.createProductType([])),
      new SumTypeVariant("Valerian", AlgebraicType.createProductType([])),
      new SumTypeVariant("Mugwort", AlgebraicType.createProductType([])),
      new SumTypeVariant("BearGarlic", AlgebraicType.createProductType([])),
      new SumTypeVariant("SiberianGinseng", AlgebraicType.createProductType([])),
      new SumTypeVariant("Dogbane", AlgebraicType.createProductType([])),
      new SumTypeVariant("BogCotton", AlgebraicType.createProductType([])),
      new SumTypeVariant("Flax", AlgebraicType.createProductType([])),
      new SumTypeVariant("Salsify", AlgebraicType.createProductType([])),
      new SumTypeVariant("ScurvyGrass", AlgebraicType.createProductType([])),
      new SumTypeVariant("Crowberry", AlgebraicType.createProductType([])),
      new SumTypeVariant("SeaPlantain", AlgebraicType.createProductType([])),
      new SumTypeVariant("Glasswort", AlgebraicType.createProductType([])),
      new SumTypeVariant("Chanterelle", AlgebraicType.createProductType([])),
      new SumTypeVariant("Porcini", AlgebraicType.createProductType([])),
      new SumTypeVariant("FlyAgaric", AlgebraicType.createProductType([])),
      new SumTypeVariant("ShaggyInkCap", AlgebraicType.createProductType([])),
      new SumTypeVariant("DeadlyWebcap", AlgebraicType.createProductType([])),
      new SumTypeVariant("DestroyingAngel", AlgebraicType.createProductType([])),
      new SumTypeVariant("Lingonberries", AlgebraicType.createProductType([])),
      new SumTypeVariant("Cloudberries", AlgebraicType.createProductType([])),
      new SumTypeVariant("Bilberries", AlgebraicType.createProductType([])),
      new SumTypeVariant("WildStrawberries", AlgebraicType.createProductType([])),
      new SumTypeVariant("RowanBerries", AlgebraicType.createProductType([])),
      new SumTypeVariant("Cranberries", AlgebraicType.createProductType([])),
      new SumTypeVariant("Mandrake", AlgebraicType.createProductType([])),
      new SumTypeVariant("Belladonna", AlgebraicType.createProductType([])),
      new SumTypeVariant("Henbane", AlgebraicType.createProductType([])),
      new SumTypeVariant("Datura", AlgebraicType.createProductType([])),
      new SumTypeVariant("Wolfsbane", AlgebraicType.createProductType([])),
      new SumTypeVariant("Sunflowers", AlgebraicType.createProductType([])),
    ]);
  }

  export function serialize(writer: BinaryWriter, value: PlantType): void {
      PlantType.getTypeScriptAlgebraicType().serialize(writer, value);
  }

  export function deserialize(reader: BinaryReader): PlantType {
      return PlantType.getTypeScriptAlgebraicType().deserialize(reader);
  }

}

// The tagged union or sum type for the algebraic type `PlantType`.
export type PlantType = PlantType.BorealNettle | PlantType.Potato | PlantType.Pumpkin | PlantType.Reed | PlantType.BeachLymeGrass | PlantType.Carrot | PlantType.Beets | PlantType.Horseradish | PlantType.Chicory | PlantType.Yarrow | PlantType.Chamomile | PlantType.Mint | PlantType.Valerian | PlantType.Mugwort | PlantType.BearGarlic | PlantType.SiberianGinseng | PlantType.Dogbane | PlantType.BogCotton | PlantType.Flax | PlantType.Salsify | PlantType.ScurvyGrass | PlantType.Crowberry | PlantType.SeaPlantain | PlantType.Glasswort | PlantType.Chanterelle | PlantType.Porcini | PlantType.FlyAgaric | PlantType.ShaggyInkCap | PlantType.DeadlyWebcap | PlantType.DestroyingAngel | PlantType.Lingonberries | PlantType.Cloudberries | PlantType.Bilberries | PlantType.WildStrawberries | PlantType.RowanBerries | PlantType.Cranberries | PlantType.Mandrake | PlantType.Belladonna | PlantType.Henbane | PlantType.Datura | PlantType.Wolfsbane | PlantType.Sunflowers;

export default PlantType;

